<div class="container">

<div class="navfix centered">

<%= render '/layouts/nav3' %> 
</div>

<div class ="centered">



<% if notice.present? %>

 <span class="alert alert-success fade in">
  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                  <%= notice %>.
  </span>

  <% end %>
    

    <div class="centered fieldfix">
        <%= render '/components/preach_form' %><br><br>
        </div>



       <!--MIDDLE STARTS-->






     <!-- ============================================
          HEADER
          =============================================== -->
          

     
     <div class="clearfix"></div>

       <ul id="playlist">
      

       <% @songs.each do |song| %>

      

       

      <li song="<%= song.sound.url if song.sound %>" cover="<%= song.soundcover.url if song.soundcover %> "   artist="<%= song.artist %>" title="<%= truncate(song.title, length: 14) %>"> 
        <% if song.soundcover? %>
        <%=link_to (image_tag song.soundcover.url(:thumb), :class => "img-responsive centered box-hover"), song %>
        <% else %> 
        <%= image_tag("fallback/noimage.jpg", :class => "img-responsive centered   box-hover") %>


          <% end %> 


           





          <div class="embed-badge">
                    <div class="embed-badge-bg bg-teal"></div>
                    <a rel="tooltip" data-container="body" title="" href="#" class="embed-badge-content" data-original-title="Elite User"><i class="fa fa-ellipsis-v"></i></a>
                  </div>


        


     

        <div class="embed-extend-item">

         <%# image_tag("dummy/uifaces11.jpg", class: "kit-avatar kit-avatar-96 border-white pull-left") %>
         <%#link_to (image_tag song.user.profilephoto.url(:small), :class => "kit-avatar kit-avatar-96 border-white pull-left"), @user %>


          <!--Profilephoto-->
          <% if song.preacher.profilephoto? %>
        <%= link_to (image_tag(song.preacher.profilephoto.url(:large), :class => "kit-avatar kit-avatar-96 border-white pull-left pullup padding10")), preacher_path(song.preacher_id) %>


         

        <% else %> 
        <%= link_to (image_tag("fallback/unknown-profile.jpg", :class => "kit-avatar kit-avatar-96 border-white pull-left pullup padding10")), preacher_path(song.preacher_id) %>


       <% end %> 

       <!--end of Profilephoto-->
                  

       <h3> <%= link_to (song.title.split(" ").map(&:capitalize).join(" ")), song %>

       <% if song.artist? %>


                    <small><%= song.artist.split(" ").map(&:capitalize).join(" ") %></small> </h3>

                    <% else %>

                    <% end %>

      </div>




      <div class="panel-body">
                  <div class="row">
                    <div class="col-xs-3 bordered-right">
                    <br />
                      <p class="text-center"><a href:"#" class="fa fa-clock-o fa-2x"></a><br><strong><%= song. created_at.strftime('%d %B %Y') %></strong></p>
                    </div><!-- /.cols -->


                    <!--div class="col-xs-3 bordered-right">
                      <h5 class="text-center"><a href:"#" class="fa fa-retweet fa-2x"></a><br><strong>26</strong></h5>
                    </div>--><!-- /.cols -->


                    <div class="col-xs-3 bordered-right">
                      <h5 class="text-center"> <a href:"#"> <%= link_to song do %><i class="fa fa-eye fa-2x" style="color:#337ab7"></i><% end %></a>
                       <br><strong><%= song.impressionist_count(:filter=>:session_hash) %></strong></h5>
                        </div><!-- /.cols -->

                    <div class="col-xs-3 bordered-right">
                      <h5 class="text-center"> <a href:"#"> <%= link_to song do %><i class="fa fa-comment fa-2x" style="color:#337ab7"></i><% end %></a>
                    <br><strong><%= song.comments.count %></strong></h5>

                    </div><!-- /.cols -->
                    <div class="col-xs-3">
                      <h5 class="text-center">

                      <p id="song_<%= song.id %>_likes"><%= render partial: "likes", locals: {song: song} %></p>
                    </div><!-- /.cols -->

                    
                    
<%= link_to 'Edit', edit_song_path(song) %>

<%= song.preacher.firstname if song.preacher.firstname %>



       


        <%= link_to 'Destroy', song, method: :delete, data: { confirm: 'Are you sure?' } %>
        

        

                    </div>
                    </div>

                  




      </li>



    

       <% end %>  

       <div class="big-play"></div>    
    <br>
<br>

<div class="pag">

<%# will_paginate @songs %>

<div class="tags-cloud glassy-bg">
  <h4>Tags Cloud</h4>
  tags cloud
</div>





</div>
<br>
<p></p>
<p></p>

  <br>
<br>

       </ul>
       

    


    </div>

        <div class="panel panel-default post-panel">
          <div class="panel-body row">
            <div class="col-sm-12">
            <center><img src="/icon.png" height="25px" width="25px"></img>
              <a href="#top"><p class="opacity: .7;">Back to top <span class="glyphicon glyphicon-arrow-up" aria-hidden="true"></span></p></a></center>
            </div>
          </div>
        </div>
    </div>
    
    


</div><!--container-->




















<br />
<br />
<br />
<br />


<footer class="footer-wrapper" role="contentinfo"> 

      <div class="footer">


       



        <div id="audio-player">
    <div id="audio-info">      
      
       Playing <span class="title"></span> - <span class="artist"></span>
    </div>

<div id = "playercontainer centered">

<div class ="coverup">

   

        <div id="tracker">

      <div id="progressBar">
        <div id="progress"></div>
        
      </div>
     
     


<div id="buttons">
     <span>
      <button id="prev"></button>
      <button id="play"></button>
      <button id="pause"></button>
      <!--button id="stop"></button-->
      <button id="next"></button>
      <button id="speaker"></button>
      <button id="mute"></button>
      <button id="unloop"></button>
      <button id="loop"></button>
      </span>
<span id="duration"> </span>


<div id="mp3_player">
           <div id="audio_box">
           </div>           
           <canvas id="analyser_render">
           </canvas>         
         </div>





        





</div> <!--playercontainer-->

        <div class="pull-right">
           <div id="audio-image">
           <img class="cover" />          
          </div>

           </div>




             <!-- analyzer -->
         
     



     </div>
        </div>
        <div>Preachout  &copy; 2016
        </div>
      </div>


    <!-- /.buttons -->
    </footer><!-- /.FOOTER -->





<!--Script-->

<script>

var audio;

// Establish all variables that your Analyser will use
var canvas, ctx, source, context, analyser, fbc_array, bars, bar_x, bar_width, bar_height, seekbar, seektimeupdate, audioSeek, numBars;


  

//Hide Pause Initially
$('#pause').hide();
$('#mute').hide();
$('#unloop').hide();
  
//Initializer - Play First Song
initAudio($('#playlist li:first-child'));
  
function initAudio(element){
  var song = element.attr('song');
    var title = element.attr('title');
    var cover = element.attr('cover');
    var artist = element.attr('artist');
    

    // Progress Bar Container
  //progressBar = document.getElementById('progressBar');
 // progress = document.getElementById('progress');



  // Buttons Container
 

  
  //Create a New Audio Object
  audio = new Audio(song);
  audio.loop = true;
  if(!audio.currentTime){
    $('#duration').html('0.00');
  }

  $('#audio-player .title').text(title);
    $('#audio-player .artist').text(artist);
  
  //Insert Cover Image
  $('img.cover').attr('src','' + cover);
  
  $('#playlist li').removeClass('active');
  
    element.addClass('active');


}

   

//Play Button
$('#play').click(function(){
  audio.play();

  
  $('#play').hide();
  $('#pause').show();
  $('#duration').fadeIn(400);
  showDuration();
});

//Pause Button
$('#pause').click(function(){
  audio.pause();
  $('#pause').hide();
  $('#play').show();


    // Visualize snippet
  context = new AudioContext(); // AudioContext object instance
  analyser = context.createAnalyser(); // AnalyserNode method
  canvas = document.getElementById('analyser_render');
  ctx = canvas.getContext('2d');
  // Re-route audio playback into the processing graph of the AudioContext
  source = context.createMediaElementSource(audio); 
  source.connect(analyser);
  analyser.connect(context.destination);
  frameLooper();
  // Visualize snippet ends


});
  
//Stop Button
//$('#stop').click(function(){
  //audio.pause();    
  //audio.currentTime = 0;
  //$('#pause').hide();
  //$('#play').show();
  
  //showDuration();
//});

//Play speaker
$('#speaker').click(function(){
  audio.muted = true;
  $('#speaker').hide();
  $('#mute').show();
  $('#duration').fadeIn(400);
  showDuration();
});

//Pause BMute
$('#mute').click(function(){
  
  audio.muted= false;
  $('#speaker').show();
  $('#mute').hide();
});

//Next Button
$('#next').click('ended',function(){
    audio.pause();

  $('#loop').show();
  $('#unloop').hide();
  $('#pause').show();
  $('#play').show();

    var next = $('#playlist li.active').next();
    if (next.length == 0) {
        next = $('#playlist li:first-child');
    }
    initAudio(next);
  audio.play();
  showDuration();

  // Visualize snippet
  context = new AudioContext(); // AudioContext object instance
  analyser = context.createAnalyser(); // AnalyserNode method
  canvas = document.getElementById('analyser_render');
  ctx = canvas.getContext('2d');
  // Re-route audio playback into the processing graph of the AudioContext
  source = context.createMediaElementSource(audio); 
  source.connect(analyser);
  analyser.connect(context.destination);
  frameLooper();
  // Visualize snippet ends
});

//Play unloop
$('#loop').click(function(){
  audio.loop = false;
  audio.load();
  
  $('#loop').hide();
  $('#unloop').show();
  $('#pause').hide();
  $('#play').show();
  $('#duration').fadeIn(400);
  showDuration();
});
//loop
$('#unloop').click(function(){
  audio.loop = true;
  audio.load();
  $('#loop').show();
  $('#unloop').hide();
  $('#play').show();
   $('#pause').hid();
  
});





//Prev Button
$('#prev').click(function(){
    audio.pause();
   
  $('#loop').show();
  $('#unloop').hide();
   
    var prev = $('#playlist li.active').prev();
    if (prev.length == 0) {
        prev = $('#playlist li:last-child');
    }
    initAudio(prev);
  audio.play();
  showDuration();

  // Visualize snippet
  context = new AudioContext(); // AudioContext object instance
  analyser = context.createAnalyser(); // AnalyserNode method
  canvas = document.getElementById('analyser_render');
  ctx = canvas.getContext('2d');
  // Re-route audio playback into the processing graph of the AudioContext
  source = context.createMediaElementSource(audio); 
  source.connect(analyser);
  analyser.connect(context.destination);
  frameLooper();
  // Visualize snippet ends

});

//Playlist Song Click
$('#playlist li').click(function () {
    audio.pause();


  $('#loop').show();
  $('#unloop').hide();
   
    initAudio($(this));
  $('#play').hide();
  $('#pause').show();
  $('#duration').fadeIn(400);
  audio.play();
  showDuration();
});

//Volume Control
$('#volume').change(function(){

  audio.volume = parseFloat(this.value / 100);
});

//Seek Control
//$('#seekslider').change(function(){

 // audio.seek = parseFloat(this.value / 100);
//});


 
  

//Time Duration
function showDuration(){
  $(audio).bind('timeupdate', function(){
    //Get hours and minutes
    var s = parseInt(audio.currentTime % 60);
    var m = parseInt((audio.currentTime / 60) % 60);
    //Add 0 if seconds less than 10
    if (s < 10) {
      s = '0' + s;
    }
    $('#duration').html(m + '.' + s); 
    var value = 0;
    if (audio.currentTime > 0) {
      value = Math.floor((100 / audio.duration) * audio.currentTime);
    }
    $('#progress').css('width',value+'%');
  });



}



</script> 


<script>
// Create a new instance of an audio object and adjust some of its properties






window.addEventListener("load", initMp3Player, true);
function initMp3Player(){
  document.getElementById('audio_box').appendChild(audio);
  context = new AudioContext(); // AudioContext object instance
  analyser = context.createAnalyser(); // AnalyserNode method
  canvas = document.getElementById('analyser_render');
  ctx = canvas.getContext('2d');
 
  // Re-route audio playback into the processing graph of the AudioContext
  source = context.createMediaElementSource(audio); 
  source.connect(analyser);
  analyser.connect(context.destination);
  frameLooper();
}


    







// frameLooper() animates any style of graphics you wish to the audio frequency
// Looping at the default frame rate that the browser provides(approx. 60 FPS)
function frameLooper(){
  window.requestAnimationFrame(frameLooper);
  fbc_array = new Uint8Array(analyser.frequencyBinCount);
  analyser.getByteFrequencyData(fbc_array);
  ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas

     
   

//ctx.fillStyle = 'gradient';
  
  //ctx.fillStyle = "hsl( " + Math.round((i*360)/numBars) + ", 100%, 50%)";

  //ctx.fillStyle = '#F6D565';

  
  ctx.lineCap = 'round';
  bars = 840;
  for (var i = 0; i < bars; i++) {
    bar_x = i * 3;
    bar_width = 0.5;
    bar_height = -(fbc_array[i] / 2);
    //  fillRect( x, y, width, height ) // Explanation of the parameters below
    ctx.fillRect(bar_x, canvas.height, bar_width, bar_height);
    ctx.fillStyle = 'white'; // Color of the bars
  }
}

draw();
</script>

<script>


var ready = function(){
  var render, select;

  render = function(term, data, type) {
    return term;
  }

  select = function(term, data, type){
    // populate our search form with the autocomplete result
    $('#search').val(term);
   
    // hide our autocomplete results
    $('ul#soulmate').hide();

    // then redirect to the result's link 
    // remember we have the link in the 'data' metadata
    return window.location.href = data.link
  }

  $('#search').soulmate({
    url: '/autocomplete/search',
    types: ['songs','verbs'],
    renderCallback : render,
    selectCallback : select,
    minQueryLength : 2,
    maxResults     : 5
  })


}
// when our document is ready, call our ready function
$(document).ready(ready);

// if using turbolinks, listen to the page:load event and fire our ready function
$(document).on('page:load', ready);
</script>
